* Why Learn to Program?
** Avenue for your other passions
** Weird world of open source
** Freedom and hope
* What is a website
** Lets start with a basic website
*** HTML is just text
*** Example of .html file
*** Deployment
*** Request Response
* Tools
** Terminal
Different way to interact with the computer
*** ls
*** cd
**** .
**** ..
*** mkdir
*** mv
*** rm
*** rm -rf
** Text Editor
Your canvas
*** Atom
*** vi
*** Sublime Text
*** Microsoft Word
*** Notepad
*** emacs
* Markup Language: Hierarchy
** Examples
*** Github
**** Markdown
*** This file
**** org-mode markup language
*** Website
**** HTML
*** Android
**** XML
*** iOS
**** XML
* HTML
** Hierarchy
*** Markup hierarchy of a research paper
*** Newspaper
** Different way to think about it
*** World of objects
*** Objects inside of objects
** div
*** Most generic markup
**** Division of space
*** Most generic object
**** Blank canvas
**** Go over default settings in different browsers
** h1..h6
*** Headers
**** Go over default settings in different browsers
*** Newspaper headings
** p
*** Paragraphs
**** Go over default settings in different browsers
** a
*** Links
*** Different pages
**** External link
**** Internal link
*** Images
**** S3
**** Imgur
** Inspect Element
*** Markup
**** HTML
*** CSS sneak peak
* HTML5
** video
*** S3
*** VODs
** audio
*** S3
*** Podcast
** Semantic tags
*** Common classes that everyone was using
**** nav
**** section
**** header
**** footer
**** aside
* CSS
** Block vs. Inline
*** Block
*** Inline
*** Key Differences
**** width/height
**** margin/padding
***** Picture example
** Inline Block
*** width/height
*** margin/padding
*** inline
*** vertical align top
* CSS3
** border-radius
*** Rounded edges
** vendor prefix
*** Experimental technology
* Responsive Design
** Different screen sizes
** Media query
** em
* Bootstrap
** Columns
** Navbar
* Communicating with a Computer
** Bits
*** Text
*** Images
*** Videos
*** 3D Videos
** Binary
*** Binary -> Number
** ASCII
*** Number -> Letter
* Intro to JavaScript
** Numbers
** Strings
** Variables
** Conditionals
** Loops
** Arrays
** Objects
* Sorts with JavaScript
** Bubble Sort
** Selection Sort
** Insertion Sort
* Advanced Sorts & Data Structures with JavaScript
** Recursion
** Merge Sort
** Quick Sort
** Array
** Linked List
* HTML/CSS/JS
Website is just HTML/CSS/JS no matter what it was written in.
** Example with all three
** Event listeners
** Callbacks
* JQuery
** Browser compatibility
** addClass
** removeClass
** html
* Intro to Ruby
** Objects
** Numbers
** Strings
** Variables
** Conditionals
** Loops
** Arrays
* Sinatra
** Routes
** GET
** POST
*** form
* Database Designs
** One to One
*** User has one classroom
*** User has one facebook
** One to Many
*** Repositories
*** Tweets
*** Posts
** Many to Many
*** Likes
*** Fans
*** Subscriptions
* MySQL
** INSERT
*** Create
*** create
** SELECT
*** Read
*** index & show
** UPDATE
*** Update
*** update
** DELETE
*** Delete
*** destroy
** LEFT JOIN
** JOIN
** SELF JOIN
* REST
** index
** new
** create
** edit
** update
** destroy
* Building APIs with Sinatra
** index
*** get '/users'
** new
*** get '/users/new'
** create
*** post '/users'
** edit
*** get '/users/1/edit'
** update
*** patch '/users/1'
** destroy
*** delete '/users/1'
* Ajax and APIs 
** $.get
*** get request to a URL and do something with the response
** $.post
*** post request to a URL and do something with the response
** $.ajax
*** generic way to send all ajax request to a URL and do something with the response
*** promise
* Rails I
** App structure
*** app
**** models
**** controllers
***** UsersController
**** views
***** users
****** index.html.erb
****** new.html.erb
****** show.html.erb
****** edit.html.erb
*** assets
**** stylesheets
***** users.scss
***** Sass
****** variables
****** nesting
**** javascripts
***** users.js
***** users.coffee
**** images
***** icons/svgs
***** s3
*** config/routes.rb
**** get '/users'
**** get '/users/new'
**** post '/users'
**** get '/users/1/edit'
**** patch '/users/1'
**** delete '/users/1'
** Routes
*** It all starts with the route
** Controllers
*** ApplicationController
*** action
** Views
*** same name as action
** Models
*** ActiveRecord::Base
*** Migrations
**** version control for the database
*** Validations
**** presence
**** regexp
**** numericality
** MVC
*** Error driven flow
*** Model
**** TicTacToeGame
*** View
*** Controller
*** Examples
**** Website
**** Game
**** iOS
**** Android
** REST
*** index
*** new
*** create
*** edit
*** update
*** destroy
* Rails II
** Authentication
*** Sign in
*** Sign up
** Channels
*** one to many
** Fans
*** many to many
* Rails III
** RSpec
*** Linked List in Ruby
** Rails Test Suite
*** rspec
*** capybara
*** database-cleaner
** Capybara
*** Feature tests
** Unit Tests
*** Model
*** Routes
*** Permissions
* Real-time Applications
** Node.js
*** Back-end JavaScript Environment
*** Node modules
*** Real-time
** Socket.io
*** Two libraries
**** Server side
**** Client side
*** Examples
**** Chat
**** iOS
**** Android
* Livestreaming with Wowza
** Transcoder
*** OBS
** Wowza Streaming Engine
** JWPlayer
** Deployment
*** EC2
* Payments with Stripe
** Checkout
** Connect
** Subscribers
* Deployment with Heroku
** Sinatra
** Rails
** Socket server
